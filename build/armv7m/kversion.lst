ARM GAS  /var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"kversion.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "core/src/kversion.c"
  18              		.section	.text.kGetVersion,"ax",%progbits
  19              		.align	1
  20              		.global	kGetVersion
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	kGetVersion:
  26              	.LFB0:
   1:core/src/kversion.c **** /******************************************************************************
   2:core/src/kversion.c ****  *                     RK0 - Real-Time Kernel '0'
   3:core/src/kversion.c ****  * Version           :   V0.4.0
   4:core/src/kversion.c ****  * Target            :   ARMv7m
   5:core/src/kversion.c ****  *
   6:core/src/kversion.c ****  * Copyright (c) 2025 Antonio Giacomelli
   7:core/src/kversion.c ****  ******************************************************************************/
   8:core/src/kversion.c ****  /******************************************************************************
   9:core/src/kversion.c ****  *  Module            : Version
  10:core/src/kversion.c ****  *  Provides to       : All
  11:core/src/kversion.c ****  *  Public API        : Yes
  12:core/src/kversion.c ****  *
  13:core/src/kversion.c ****  *  It is a good practice to keep a firmware version on a dedicated
  14:core/src/kversion.c ****  *  translation unit.
  15:core/src/kversion.c ****  *
  16:core/src/kversion.c ****  *  In this unit:
  17:core/src/kversion.c ****  *      o Kernel Version record and retrieval
  18:core/src/kversion.c ****  *
  19:core/src/kversion.c ****  *****************************************************************************/
  20:core/src/kversion.c **** 
  21:core/src/kversion.c **** #include "kversion.h"
  22:core/src/kversion.c **** 
  23:core/src/kversion.c **** /* no file system, no NVM map, this is the best we can do */
  24:core/src/kversion.c **** struct kversion const KVERSION =
  25:core/src/kversion.c **** { 0, 4, 0 };
  26:core/src/kversion.c **** 
  27:core/src/kversion.c **** unsigned int kGetVersion( void)
  28:core/src/kversion.c **** {
  27              		.loc 1 28 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s 			page 2


  31              		@ link register save eliminated.
  29:core/src/kversion.c **** 	unsigned int version = (KVERSION.major << 16 | KVERSION.minor << 8
  32              		.loc 1 29 2 view .LVU1
  33              	.LVL0:
  30:core/src/kversion.c **** 			| KVERSION.patch << 0);
  31:core/src/kversion.c **** 	return (version);
  34              		.loc 1 31 2 view .LVU2
  32:core/src/kversion.c **** }
  35              		.loc 1 32 1 is_stmt 0 view .LVU3
  36 0000 4FF48060 		mov	r0, #1024
  37 0004 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE0:
  41              		.section	.text.kIsValidVersion,"ax",%progbits
  42              		.align	1
  43              		.global	kIsValidVersion
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	kIsValidVersion:
  49              	.LFB1:
  33:core/src/kversion.c **** 
  34:core/src/kversion.c **** unsigned int kIsValidVersion( void)
  35:core/src/kversion.c **** {
  50              		.loc 1 35 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54 0000 08B5     		push	{r3, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 3, -8
  57              		.cfi_offset 14, -4
  36:core/src/kversion.c **** 	return (kGetVersion() == RK_VALID_VERSION );
  58              		.loc 1 36 2 view .LVU5
  59              		.loc 1 36 10 is_stmt 0 view .LVU6
  60 0002 FFF7FEFF 		bl	kGetVersion
  61              	.LVL1:
  37:core/src/kversion.c **** }
  62              		.loc 1 37 1 view .LVU7
  63 0006 B0F5806F 		cmp	r0, #1024
  64 000a 14BF     		ite	ne
  65 000c 0020     		movne	r0, #0
  66 000e 0120     		moveq	r0, #1
  67 0010 08BD     		pop	{r3, pc}
  68              		.cfi_endproc
  69              	.LFE1:
  71              		.global	KVERSION
  72              		.section	.rodata.KVERSION,"a"
  73              		.align	2
  76              	KVERSION:
  77 0000 00       		.byte	0
  78 0001 04       		.byte	4
  79 0002 00       		.byte	0
  80              		.text
  81              	.Letext0:
  82              		.file 2 "core/inc/kversion.h"
ARM GAS  /var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s 			page 3


DEFINED SYMBOLS
                            *ABS*:00000000 kversion.c
/var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s:19     .text.kGetVersion:00000000 $t
/var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s:25     .text.kGetVersion:00000000 kGetVersion
/var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s:42     .text.kIsValidVersion:00000000 $t
/var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s:48     .text.kIsValidVersion:00000000 kIsValidVersion
/var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s:76     .rodata.KVERSION:00000000 KVERSION
/var/folders/fg/4fzv35n91mbcgx4z5jzqdsl40000gn/T//ccnlqOek.s:73     .rodata.KVERSION:00000000 $d

NO UNDEFINED SYMBOLS
